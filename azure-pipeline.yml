trigger:
  batch: true
  branches:
    include: 
    - master
variables:
  buildConfiguration: 'Release'
  
stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'windows-latest'
    steps:
    # Build and publish the application library
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '**/BookAppCore*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: build
        projects: '**/BookAppCore*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

        
    # Publish the app as an artifact
    - publish: $(Build.StagingDirectory)
      artifact: app

    
    - task: MSBuild@1
      displayName: 'Build solution BookApp.Data'
      inputs:
        solution: BookApp.Data 

    - task: CopyFiles@2
      displayName: 'Copy Files to: Dacpac file'
      inputs:
        SourceFolder: BookApp.Data
        Contents: '**/*'
        TargetFolder: '$(build.artifactstagingdirectory)drop/bin/debug/*dacpac'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)drop/bin/debug/*dacpac'
      condition: succeededOrFailed()

    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish Artifact'
    #   inputs:
    #     PathtoPublish: '$(build.artifactstagingdirectory)'



































